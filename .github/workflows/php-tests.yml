name: PHP Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, curl, mongodb
        coverage: xdebug
        tools: composer:v2, phpunit

    - name: Install MongoDB Shell
      run: |
        # Use the updated method for adding keys instead of apt-key
        curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | sudo gpg --dearmor -o /usr/share/keyrings/mongodb-server-6.0.gpg
        echo "deb [arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg] https://repo.mongodb.org/apt/ubuntu $(lsb_release -cs)/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh

    - name: Verify MongoDB connection
      run: |
        mongosh --version
        mongosh --eval 'db = db.getSiblingDB("todo_app"); db.createUser({user: "mongoadmin", pwd: "123456", roles: [{role: "readWrite", db: "todo_app"}]})'

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Create test environment
      run: |
        mkdir -p logs
        chmod -R 777 logs
        cp .env.example .env || echo "No .env.example file found"

    - name: Check PHPUnit
      run: vendor/bin/phpunit --version

    - name: Check PHP syntax
      run: find . -name "*.php" -exec php -l {} \;

    - name: Run tests
      run: vendor/bin/phpunit --verbose --debug --coverage-text
      env:
        DB_CONNECTION: mongodb
        DB_HOST: localhost
        DB_PORT: 27017
        DB_DATABASE: todo_app
        DB_USERNAME: mongoadmin
        DB_PASSWORD: 123456

    - name: Upload code coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: ./build/logs/clover.xml
        retention-days: 7
