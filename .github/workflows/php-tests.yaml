name: PHP Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:5
        env:
          MONGO_INITDB_ROOT_USERNAME: mongoadmin
          MONGO_INITDB_ROOT_PASSWORD: 123456
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand({serverStatus:1}).ok' | mongosh --quiet --username mongoadmin --password 123456 admin --eval 'quit(db.runCommand({serverStatus:1}).ok ? 0 : 1)'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mongodb
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install MongoDB Shell
        run: |
          curl -fsSL https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Create MongoDB test database
        run: |
          mongosh --host localhost --port 27017 -u mongoadmin -p 123456 --eval "db = db.getSiblingDB('todo_app_test'); db.createCollection('users'); db.createCollection('tasks');"

      - name: Run test suite
        run: composer run-script test